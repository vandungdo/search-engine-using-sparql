{"remainingRequest":"/home/dung/Desktop/code/javascript/vuejs/vue_dashboard/vue-material-dashboard-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dung/Desktop/code/javascript/vuejs/vue_dashboard/vue-material-dashboard-master/src/components/Cards/ChartCard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dung/Desktop/code/javascript/vuejs/vue_dashboard/vue-material-dashboard-master/src/components/Cards/ChartCard.vue","mtime":1607335910000},{"path":"/home/dung/Desktop/code/javascript/vuejs/vue_dashboard/vue-material-dashboard-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dung/Desktop/code/javascript/vuejs/vue_dashboard/vue-material-dashboard-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/dung/Desktop/code/javascript/vuejs/vue_dashboard/vue-material-dashboard-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dung/Desktop/code/javascript/vuejs/vue_dashboard/vue-material-dashboard-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiY2hhcnQtY2FyZCIsCiAgcHJvcHM6IHsKICAgIGZvb3RlclRleHQ6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAiIgogICAgfSwKICAgIGhlYWRlclRpdGxlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogIkNoYXJ0IHRpdGxlIgogICAgfSwKICAgIGNoYXJ0VHlwZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICJMaW5lIiAvLyBMaW5lIHwgUGllIHwgQmFyCiAgICB9LAogICAgY2hhcnRPcHRpb25zOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogKCkgPT4gewogICAgICAgIHJldHVybiB7fTsKICAgICAgfQogICAgfSwKICAgIGNoYXJ0UmVzcG9uc2l2ZU9wdGlvbnM6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6ICgpID0+IHsKICAgICAgICByZXR1cm4gW107CiAgICAgIH0KICAgIH0sCiAgICBjaGFydERhdGE6IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICBkZWZhdWx0OiAoKSA9PiB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIGxhYmVsczogW10sCiAgICAgICAgICBzZXJpZXM6IFtdCiAgICAgICAgfTsKICAgICAgfQogICAgfSwKICAgIGRhdGFCYWNrZ3JvdW5kQ29sb3I6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAiIgogICAgfQogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNoYXJ0SWQ6ICJuby1pZCIKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICAvKioqCiAgICAgKiBJbml0aWFsaXplcyB0aGUgY2hhcnQgYnkgbWVyZ2luZyB0aGUgY2hhcnQgb3B0aW9ucyBzZW50IHZpYSBwcm9wcyBhbmQgdGhlIGRlZmF1bHQgY2hhcnQgb3B0aW9ucwogICAgICovCiAgICBpbml0Q2hhcnQoQ2hhcnRpc3QpIHsKICAgICAgdmFyIGNoYXJ0SWRRdWVyeSA9IGAjJHt0aGlzLmNoYXJ0SWR9YDsKICAgICAgQ2hhcnRpc3RbdGhpcy5jaGFydFR5cGVdKGNoYXJ0SWRRdWVyeSwgdGhpcy5jaGFydERhdGEsIHRoaXMuY2hhcnRPcHRpb25zKTsKICAgIH0sCiAgICAvKioqCiAgICAgKiBBc3NpZ25zIGEgcmFuZG9tIGlkIHRvIHRoZSBjaGFydAogICAgICovCiAgICB1cGRhdGVDaGFydElkKCkgewogICAgICB2YXIgY3VycmVudFRpbWUgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKS50b1N0cmluZygpOwogICAgICB2YXIgcmFuZG9tSW50ID0gdGhpcy5nZXRSYW5kb21JbnQoMCwgY3VycmVudFRpbWUpOwogICAgICB0aGlzLmNoYXJ0SWQgPSBgZGl2XyR7cmFuZG9tSW50fWA7CiAgICB9LAogICAgZ2V0UmFuZG9tSW50KG1pbiwgbWF4KSB7CiAgICAgIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluICsgMSkpICsgbWluOwogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMudXBkYXRlQ2hhcnRJZCgpOwogICAgaW1wb3J0KCJjaGFydGlzdCIpLnRoZW4oQ2hhcnRpc3QgPT4gewogICAgICBsZXQgQ2hhcnRpc3RMaWIgPSBDaGFydGlzdC5kZWZhdWx0IHx8IENoYXJ0aXN0OwogICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgdGhpcy5pbml0Q2hhcnQoQ2hhcnRpc3RMaWIpOwogICAgICB9KTsKICAgIH0pOwogIH0KfTsK"},{"version":3,"sources":["ChartCard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ChartCard.vue","sourceRoot":"src/components/Cards","sourcesContent":["<template>\n  <md-card>\n    <md-card-header\n      class=\"card-chart\"\n      :data-background-color=\"dataBackgroundColor\"\n    >\n      <div :id=\"chartId\" class=\"ct-chart\"></div>\n    </md-card-header>\n\n    <md-card-content>\n      <slot name=\"content\"></slot>\n    </md-card-content>\n\n    <md-card-actions md-alignment=\"left\">\n      <slot name=\"footer\"></slot>\n    </md-card-actions>\n  </md-card>\n</template>\n<script>\nexport default {\n  name: \"chart-card\",\n  props: {\n    footerText: {\n      type: String,\n      default: \"\"\n    },\n    headerTitle: {\n      type: String,\n      default: \"Chart title\"\n    },\n    chartType: {\n      type: String,\n      default: \"Line\" // Line | Pie | Bar\n    },\n    chartOptions: {\n      type: Object,\n      default: () => {\n        return {};\n      }\n    },\n    chartResponsiveOptions: {\n      type: Array,\n      default: () => {\n        return [];\n      }\n    },\n    chartData: {\n      type: Object,\n      default: () => {\n        return {\n          labels: [],\n          series: []\n        };\n      }\n    },\n    dataBackgroundColor: {\n      type: String,\n      default: \"\"\n    }\n  },\n  data() {\n    return {\n      chartId: \"no-id\"\n    };\n  },\n  methods: {\n    /***\n     * Initializes the chart by merging the chart options sent via props and the default chart options\n     */\n    initChart(Chartist) {\n      var chartIdQuery = `#${this.chartId}`;\n      Chartist[this.chartType](chartIdQuery, this.chartData, this.chartOptions);\n    },\n    /***\n     * Assigns a random id to the chart\n     */\n    updateChartId() {\n      var currentTime = new Date().getTime().toString();\n      var randomInt = this.getRandomInt(0, currentTime);\n      this.chartId = `div_${randomInt}`;\n    },\n    getRandomInt(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n  },\n  mounted() {\n    this.updateChartId();\n    import(\"chartist\").then(Chartist => {\n      let ChartistLib = Chartist.default || Chartist;\n      this.$nextTick(() => {\n        this.initChart(ChartistLib);\n      });\n    });\n  }\n};\n</script>\n"]}]}